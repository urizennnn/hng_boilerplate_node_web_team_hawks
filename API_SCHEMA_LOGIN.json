{
    "openapi": "3.0.0",
    "info": {
      "title": "HNG Boilerplate API",
      "version": "1.0.0",
      "description": "API documentation for the HNG boilerplate project."
    },
    "servers": [
      {
        "url": "http://localhost:3000/api"
      }
    ],
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "paths": {
      "/auth/login": {
        "post": {
          "summary": "User login",
          "description": "Allows a user to login with their credentials.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "password": {
                      "type": "string",
                      "format": "password"
                    }
                  },
                  "required": ["email", "password"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User logged in successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "User logged in successfully"
                      },
                      "token": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Invalid credentials"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/auth/register": {
        "post": {
          "summary": "User registration",
          "description": "Allows a new user to register an account.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User registered successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "User registered successfully"
                      },
                      "data": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/400"
            },
            "422": {
              "$ref": "#/components/responses/422"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/permissions": {
        "get": {
          "summary": "Get user permissions",
          "description": "Retrieves the permissions assigned to the user.",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Permissions retrieved successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Permissions retrieved successfully"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      }
    },
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer"
        }
      },
      "schemas": {
        "User": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "A unique identifier for the user",
              "readOnly": true
            },
            "firstName": {
              "type": "string",
              "description": "User's first name"
            },
            "lastName": {
              "type": "string",
              "description": "User's last name"
            },
            "phone": {
              "type": "string",
              "description": "User's phone number"
            },
            "email": {
              "type": "string",
              "format": "email",
              "description": "User's email address"
            },
            "password": {
              "type": "string",
              "description": "User's password (bcrypt hash)",
              "pattern": "^\\$2[ayb]\\$.{56}$"
            }
          },
          "required": ["email", "lastName", "password"]
        }
      },
      "responses": {
        "400": {
          "description": "Client error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "example": "Bad Request"
                  },
                  "message": {
                    "type": "string",
                    "example": "Client error"
                  },
                  "statusCode": {
                    "type": "number",
                    "example": 400
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "example": "error"
                  },
                  "message": {
                    "type": "string",
                    "example": "Invalid credentials"
                  }
                }
              }
            }
          }
        },
        "422": {
          "description": "Validation Errors",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "example": {
                        "field": "string",
                        "message": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Error response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "example": "Error"
                  },
                  "message": {
                    "type": "string",
                    "example": "Error Fetching ..."
                  },
                  "statusCode": {
                    "type": "number",
                    "example": "500"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  